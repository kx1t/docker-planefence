#!/usr/bin/with-contenv bash
#shellcheck shell=bash

APPNAME="$(hostname)/planefence"
LOOPTIME=$(grep "PF_INTERVAL" /usr/share/planefence/persist/planefence.config | awk -F "=" '{ print $2 }')
PLANEFENCEDIR=/usr/share/planefence

echo "[$APPNAME][$(date)] PlaneFence started as an s6 service"

# -----------------------------------------------------------------------------------
# Copyright 2020, 2021 Ramon F. Kolb - licensed under the terms and conditions
# of GPLv3. The terms and conditions of this license are included with the Github
# distribution of this package, and are also available here:
# https://github.com/kx1t/planefence4docker/
#
# The package contains parts of, and modifications or derivatives to the following:
# Dump1090.Socket30003 by Ted Sluis: https://github.com/tedsluis/dump1090.socket30003
# These packages may incorporate other software and license terms.
#
# Programmers note: when using sed for URLs or file names, make sure NOT to use '/'
# as command separator, but use something else instead, for example '|'
#
# -----------------------------------------------------------------------------------
#
# We moved the initialization sequence to /usr/share/planefence/prep-planefence.sh
# because then we can re-run the sequence if we detect changes to the config file
# Also, this time needs to be sourced otherwise it won't pick up $LOOPTIME as variables
# can't be exported back to parent processes.
source /usr/share/planefence/prep-planefence.sh
#--------------------------------------------------------------------------------
# Now loop forever, after waiting for 1 cycle. The wait is so socket30003 can actually collect some data before we try to call PlaneFence
#
#
#
echo "[$APPNAME][$(date)] PlaneFence is deployed and will be starting in $LOOPTIME..."
sleep $LOOPTIME
echo "[$APPNAME][$(date)] PlaneFence starting its initial run now"
while true
do
    LOOPTIME=$(grep "PF_INTERVAL" /usr/share/planefence/persist/planefence.config | awk -F "=" '{ print $2 }')
	if [[ $(find /run/socket30003/ -name dump1090-*-$(date +%y%m%d).txt) ]]
        then
	          echo "[$APPNAME][$(date)]$($PLANEFENCEDIR/planefence.sh)"
              echo "[$APPNAME][$(date)] PlaneFence run successful. Restarting in $LOOPTIME"
        else
              echo "[$APPNAME][$(date)] /run/socket30003/dump1090-*-(date +%y%m%d).txt not found."
              echo "[$APPNAME][$(date)] If this continues to happen after 5-10 minutes, check this:"
              echo "[$APPNAME][$(date)] Is \"socket30003\" running? Is your feeder producing data?"
    fi
	# [ -z "$TESTTIME" ] && LOOPTIME="$TESTTIME" # debug code
	sleep $LOOPTIME
	echo "[$APPNAME][$(date)] PlaneFence restarting now"
done
