#!/usr/bin/with-contenv bash
#shellcheck shell=bash

APPNAME="$(hostname)/get-pa-alertlist"

echo "[$APPNAME][$(date)] Get-PA-Alertlist started as an s6 service"

# -----------------------------------------------------------------------------------
# Copyright 2020, 2021 Ramon F. Kolb - licensed under the terms and conditions
# of GPLv3. The terms and conditions of this license are included with the Github
# distribution of this package, and are also available here:
# https://github.com/kx1t/planefence4docker/
#
# The package contains parts of, and modifications or derivatives to the following:
# Dump1090.Socket30003 by Ted Sluis: https://github.com/tedsluis/dump1090.socket30003
# These packages may incorporate other software and license terms.
# -----------------------------------------------------------------------------------
#
# Make sure the /run directory exists
mkdir -p /run/get-pa-alertlist

LOOPTIME=15m

# Now let's wait a bit on the initial run to ensure that start_planefence is deployed and has finished calling prep-planefence.sh
# this ensures that the ALERTLIST parameter in /usr/share/plane-alert/plane-alert.conf is populated
sleep 15s

while true
do
	echo "[$APPNAME][$(date)] Get-PA-Alertlist started"
	#Get the list of alert files into ALERTLIST, or put the original file in it
	ALERTLIST="$(sed -n 's|^\s*ALERTLIST=\(.*\)|\1|p' /usr/share/plane-alert/plane-alert.conf)"
	[[ "$ALERTLIST" != "" ]] && IFS="," read -ra ALERTFILES <<< "$ALERTLIST" || ALERTFILES=("plane-alert-db.txt")

	# now iterate though them an put them in sequential files:
	rm -f /tmp/alertlist*.txt
	for ((i=0; i<"${#ALERTFILES[@]}"; i++))
	do
		if [[ "${ALERTFILES[i]:0:5}" == "http:" ]] || [[ "${ALERTFILES[i]:0:6}" == "https:" ]]
		then
			# it's a URL and we need to CURL it
			[[ "$(curl -L -s -fail -o /tmp/alertlist-$i.txt "${ALERTFILES[i]}" ; echo $?)" == "0" ]] && echo "[$APPNAME][$(date)] ALERTLIST ${ALERTFILES[i]} retrieval succeeded" || echo "[$APPNAME][$(date)] ALERTLIST ${ALERTFILES[i]} retrieval failed"
		else
			# it's a file and we need to concatenate it
			if [[ -f "/usr/share/planefence/persist/${ALERTFILES[i]}" ]]
			then
				cp -f "/usr/share/planefence/persist/${ALERTFILES[i]}" /tmp/alertlist-$i.txt
				echo "[$APPNAME][$(date)] ALERTLIST ${ALERTFILES[i]} retrieval succeeded"
			else
				echo "[$APPNAME][$(date)] ALERTLIST ${ALERTFILES[i]} retrieval failed"
			fi
		fi
	done
<<<<<<< HEAD
	cat /tmp/alertlist*.txt | awk -F',' '!seen[$1]++' > /usr/share/planefence/persist/.internal/plane-alert-db.txt
=======

	cat /tmp/alertlist*.txt >/usr/share/planefence/persist/.internal/plane-alert-db.txt
>>>>>>> c816b8a5c3ae7901e6f2693615d929437fc289ad
	#uncomment this for production: rm -f /tmp/alertlist*.txt

 	echo "[$APPNAME][$(date)] Get-PA-Alertlist has finished. Restarting in $LOOPTIME"
	sleep $LOOPTIME
done
