# Planefence parameters
#
# Legend: (M|O)
#          M=Mandatory parameter, O=Optional parameter
#
# ---------------------------------------------------------------------
# (M) Feeder station altitude in feet:
FEEDER_ALT_FT=60
# ---------------------------------------------------------------------
# (M) Feeder station altitude in meters:
FEEDER_ALT_M=18
# ---------------------------------------------------------------------
# (M) Feeder station latitude in decimal degrees North. South = negative number
FEEDER_LAT=90.12345
# ---------------------------------------------------------------------
# (M) Feeder station longitude in decimal degrees North. South = negative number
FEEDER_LONG=-70.12345
# ---------------------------------------------------------------------
# The following variables that start with "PF" are related to kx1t/planefence.
#
# ---------------------------------------------------------------------
# Max altitude for planes to be inside the "fence", in whatever unit PF_ALTUNIT is set to:
PF_MAXALT=5000
#
# ---------------------------------------------------------------------
# Max distance from the center (derived from FEEDER_LAT/FEEDER/LONG)
# to be inside the "fence", in whatever unit PF_DISTUNIT is set to:
PF_MAXDIST=2.0
#
# ---------------------------------------------------------------------
# Website subtitle personalization, add your name or nickname here:
PF_NAME="MY"
#
# ---------------------------------------------------------------------
# How often does PlaneFence check for new planes, in seconds.
# Strongly advice this value not to be less than 60 seconds
PF_INTERVAL=80
#
# ---------------------------------------------------------------------
# Website personalization: link to your feeder station's map.
# You can use full URLs or relative URLs
PF_MAPURL="http://external-host-name/tar1090"
#
# ---------------------------------------------------------------------
# Send out Tweets for every plane inside the fence
# Value can be ON or OFF
# In order to configure this, sign up for a Twitter Dev account,
# create an app on the Twitter Dev website, and then execute:
# "docker exec -it planefence /root/config_tweeting.sh"
PF_TWEET=OFF
#
# ---------------------------------------------------------------------
# If you tweet, you can personalize a string at the bottom using PF_TWATTRIB
PF_TWATTRIB="#planefence #adsb - docker:kx1t/planefence"
#
# ---------------------------------------------------------------------
# Location of planefence log. You can see what it's doing with
# "docker exec -it planefence tail -f /tmp/planefence.log"
PF_LOG=/tmp/planefence.log
#
# ---------------------------------------------------------------------
# What units are we using for the distance from the station?
# Allowed values are: kilometer, nauticalmile, mile, meter
PF_DISTUNIT=nauticalmile
#
# ---------------------------------------------------------------------
# What units are used for the (max) altitude?
# Allowed values are: meter, feet
PF_ALTUNIT=feet
#
# ---------------------------------------------------------------------
# What units are used for aircraft speed?
# Allowed valued are: kilometerph, knotph, mileph
PF_SPEEDUNIT=knotph
#
# ---------------------------------------------------------------------
# This defines which instance of dump1090[-fa] or readsb we get our data from
# By default, this is defined within the same docker container.
# If you haven't changed this, the value should be the "service name"
# as defined in docker-compose.yml
#
# If you run dump1090[-fa] or readsb in a different container or on a
# different machine, then you should put here the domain name of that machine.
# You should then configure your docker-compose.yml as described
# under (6) at https://github.com/kx1t/docker-planefence/blob/main/README.md
PF_SOCK30003HOST=readsb
#
# ---------------------------------------------------------------------
# Which tracking service should we use to link to?
# Allowed values are: flightaware, adsbexchange
PF_TRACKSVC=adsbexchange
#
# ---------------------------------------------------------------------
# The default size of the heatmap on the web page is configurable with
# the following variables. Note that "vh" and "vw" stand for "viewport height/width"
# The number is the percentage of the total window size that the map will take up.
#
# The default map zoom is also defined below. In the future, I am planning to dynamically
# determine this based on the radius of the fence, but for now, you can play with it
# manually. To experiment with the OpenSteetMap zoom function, browse to this URL,
# move to your own location, zoom in/out and observe the "map=xx" value change in the URL bar:
# https://www.openstreetmap.org/#map=12/42.3763/-71.0604
PF_MAPHEIGHT=40vh
PF_MAPWIDTH=75vw
PF_MAPZOOM=13
#
# ---------------------------------------------------------------------
#
# PF_DELETEAFTER indicates how many days of logs and HTML / CSV files are kept around.
# If this variable is empty or does not exist, the default will be '14'.
# If you set PF_DELETEAFTER=0, data will be kept forever (and will fill up your SD card after a while!)
PF_DELETEAFTER=
#
# ---------------------------------------------------------------------
# PF_NOISECAPT provides the link to the URL where the NoiseCapt container is running
# See http://github.com/kx1t/docker-noisecapt for information
# - If you run the NoiseCapt container from the same docker-compose.yml file,
#   then set "PF_NOISECAPT=http://noisecapt"
# - If you don't want to run NoiseCapt, set to "PF_NOISECAPT="
# If you run it on a different machine, you should put the http link to the instance.
# PF_NOISECAPT=http://noisecapt
PF_NOISECAPT=
#
# ---------------------------------------------------------------------
# PF_PLANEALERT enables a feature that monitors for a list of planes anywhere in the Feeder Station's
# coverage area.
# PF_PLANEALERT=ON means that you can find a ./plane-alert sub-page of your planefence web page.
#
# Plane-Alert can also send Twitter DMs when a plane on the alert list is detected.
# This assumes that you already configured PlaneFence for Twitter use, see "PF_TWEET" above and also README.md.
# For Plane-Alert tweeting to be on, PF_PA_TWID must contain one or more Twitter IDs. Multiple Twitter IDs should be comma separated.
# For example, FP_PA_TWID=12345678 or FP_PA_TWID=12345678,23456789,34567890
# IMPORTANT: these are NOT @names, but numeric account IDs. You can convert
# an @name to a Twitter ID at https://tweeterid.com/
PF_PLANEALERT=ON
PF_PA_TWID=
#
# ---------------------------------------------------------------------
# PF_PARANGE indicates the range for PlaneAlert. If empty or omitted, it will
# take any plane reported by your feeder station.
# If there is a value, it will take this distance in the unit determined by $PF_DISTUNIT
PF_PARANGE=999999
# ---------------------------------------------------------------------
# If PF_IGNOREDUPES is non-empty, the same ICAO+flight number combination
# during a single day will show only the first occurence thereof.
# Note - you can also filter by adding an explicit ignorelist, see the file
# ~/.planefence/planefence-ignore.txt for this
PF_IGNOREDUPES=
#
# ---------------------------------------------------------------------
# If PF_FUDGELOC is non-empty, the map and listed coordinates will be "fudged", i.e.
# rounded as to hide your exact location
# PF_FUDGELOC=2 will round your LAT/LON to the nearest 0.01 degrees (2 decimals). The actual
#               distance will vary depending on your latitude, but around 42 deg N, this is
#               about 0.5 miles / 0.75 km
# PF_FUDGELOC=3 will round your LAT/LON to the nearest 0.001 degrees (3 decimals). This
#               corresponds to about 300 ft / 100 m at 42 deg N.
# PF_FUDGELOC set to any other non-empty value is the same as PF_FUDGELOC=3
PF_FUDGELOC=3
